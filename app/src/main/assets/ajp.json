[
{
    "question":"What does AWT stand for?",
    "option_a":"Advanced Web Technologies",
    "option_b":"Abstract Window Toolkit",
    "option_c":"Advanced Window Tools",
    "option_d":"Abstract Web Technologies",
    "correct":"Abstract Window Toolkit"
},
{
    "question":"Which package contains the AWT classes?",
    "option_a":"java.awt",
    "option_b":"java.awt.package",
    "option_c":"java.tools.awt",
    "option_d":" java.gui.awt",
    "correct":"java.awt"
},
{
    "question":"What is the base class for all AWT components?",
    "option_a":"component",
    "option_b":"container",
    "option_c":"window",
    "option_d":"frame",
    "correct":"component"
},
{
    "question":" Which class is used to create a simple window?",
    "option_a":"frame",
    "option_b":"window",
    "option_c":"dialog",
    "option_d":"panel",
    "correct":"frame"
},
{
    "question":"Which layout manager is used to arrange components in a grid?",
    "option_a":"BorderLayout",
    "option_b":"FlowLayout",
    "option_c":"GridLayout",
    "option_d":"CardLayout",
    "correct":"Gridlayout"

},
{
    "question":"How do you add an ActionListener to a Button?",
    "option_a":"addActionListener()",
    "option_b":"addListener()",
    "option_c":"attachActionListener()",
    "option_d":"setActionListener()",
    "correct":"addActionListener()"

},
{
    "question":"Which class represents a pop-up menu in AWT?",
    "option_a":"PopUpMenu",
    "option_b":"MenuBar",
    "option_c":"MenuItem",
    "option_d":"Menu",
    "correct":"PopUpMenu"
},
{
    "question":"What is Swing in Java?",
    "option_a":"A dance style",
    "option_b":"A graphical user interface (GUI) toolkit",
    "option_c":"A database management system",
    "option_d":"A networking protocol",
    "correct":"A graphical user interface (GUI) toolkit"
},
{
    "question":"Which package contains the Swing classes?",
    "option_a":"java.awt",
    "option_b":"java.swing",
    "option_c":"javax.swing",
    "option_d":"java.gui",
    "correct":"javax.swing"
},
{
    "question":"Which layout manager is used for arranging components in a single row?",
    "option_a":"FlowLayout",
    "option_b":"BorderLayout",
    "option_c":"GridLayout",
    "option_d":"cardLayout",
    "correct":"Flowlayout"
},
{
    "question":"Which method is used to set the title of a JFrame",
    "option_a":"setTitle()",
    "option_b":"setLabel()",
    "option_c":"setCaption()",
    "option_d":"setHeader()",
    "correct":"setTitle()"
},
{
    "question":"How can you add an action listener to a button in Swing?",
    "option_a":"addActionListener()",
    "option_b":"addClickListener()",
    "option_c":"attachListener()",
    "option_d":"addEventHandler()",
    "correct":"addActionListener()"
},
{
    "question":"Which method is used to add components to a container with the BorderLayout?",
    "option_a":"addComponent()",
    "option_b":"insert()",
    "option_c":"add()",
    "option_d":"setComponent()",
    "correct":"add()"
},
{
    "question":"At the root of Java event hierarchy, which class is located?",
    "option_a":"AWTEVENT",
    "option_b":"Event",
    "option_c":"EVENTOBJECT",
    "option_d":"Events",
    "correct":"EVENTOBJECT"
},
{
    "question":". Action event is generated when...",
    "option_a":"Label is dragged",
    "option_b":"Button is pressed",
    "option_c":"Mouse is dragged",
    "option_d":"Window is opened",
    "correct":"Button is pressed"
},
{
    "question":"When slider of scrollbar was dragged, which event is generated?",
    "option_a":"TRACED",
    "option_b":"DRAGGED",
    "option_c":"DRAGG",
    "option_d":"SCROLL_BAR MOVED",
    "correct":"SCROLL_BAR MOVED"
},
{
    "question":"FocusEvent is subclass of ...",
    "option_a":"ContainerEvent",
    "option_b":"ComponentEvent",
    "option_c":"ItemEvent",
    "option_d":"KeyEvent",
    "correct":"ContainerEvent"
},
{
    "question":"When the InputEvent is not generated?",
    "option_a":"Key is entered through keyboard",
    "option_b":"Mouse is dragged",
    "option_c":"Mouse wheel is moved",
    "option_d":"None of the above",
    "correct":"Key is entered through keyboard"
},
{
    "question":"Which of the below is not a session tracking method?",
    "option_a":"URL rewriting",
    "option_b":"History",
    "option_c":"Cookies",
    "option_d":"SSL sessions",
    "correct":"History"
},
{
     "question":"What is the maximum size of cookie?",
     "option_a":"4kb",
     "option_b":"4mb",
     "option_c":"4 bytes",
     "option_d":"40kb",
     "correct":"4kb"
},
{
    "question":"Which tag should be used to pass information from JSP to included JSP?",
    "option_a":"Using <%jsp:page> tag",
    "option_b":"Using <%jsp:param> tag",
    "option_c":"Using <%jsp:import> tag",
    "option_d":"Using <%jsp:useBean> tag",
    "correct":" Using <%jsp:page> tag"

},
{
    "question":"Application is an instance of which class?",
    "option_a":"javax.servlet.Application",
    "option_b":"javax.servlet.HttpContext",
    "option_c":"javax.servlet.Context",
    "option_d":"javax.servlet.ServletContext",
    "correct":"javax.servlet.ServletContext"
},
{
    "question":"What is the port number of HTTP?",
    "option_a":"80",
    "option_b":"23",
    "option_c":"74",
    "option_d":"92",
    "correct":"80"
},
{
    "question":"Which class is used to encapsulate both the numerical IP address and the domain name for that address?",
    "option_a":"InetAddress",
    "option_b":"SocketAddress",
    "option_c":"IPAdress",
    "option_d":"DNSSockets",
    "correct":"InetAddress"
},
{
    "question":"What is JDBC?",
    "option_a":"Java Database Connector",
    "option_b":"Java Database Connection",
    "option_c":"Java Database Connectivity",
    "option_d":". Java Data Binding",
    "correct":"Java Database Connectivity"
},
{
    "question":"Which interface is responsible for establishing a connection to a database in JDBC?",
    "option_a":"Connection",
    "option_b":"DriverManger",
    "option_c":"Statement",
    "option_d":"ResultSet",
    "correct":"DriverManager"
},
{
    "question":"What is the purpose of the Statement interface in JDBC?",
    "option_a":"To define methods for database connections",
    "option_b":"To execute SQL queries",
    "option_c":"To represent the result set of a query",
    "option_d":"To handle database transactions",
    "correct":"To execute SQL queries"
},
{
    "question":"Which of the following methods is used to execute an SQL query in JDBC?",
    "option_a":"executeQuery()",
    "option_b":"executeUpdate()",
    "option_c":"execute()",
    "option_d":"All of the above",
    "correct":"All of the above"
},
{
    "question":"What is the role of the ResultSet interface in JDBC?",
    "option_a":"To establish a connection to the database",
    "option_b":"To execute SQL queries",
    "option_c":"To represent the result set of a query",
    "option_d":"To define methods for database connections",
    "correct":"To represent the result set of a query"
},
{
    "question":"Which of the following code is used to get an attribute in a HTTP Session object in servlets?",
    "option_a":"session.getAttribute(String name)",
    "option_b":"session.alterAttribute(String name)",
    "option_c":"session.updateAttribute(String name)",
    "option_d":"session.setAttribute(String name)",
    "correct":"session.getAttribute(String name)"
},
{
    "question":"When destroy() method of a filter is called?",
    "option_a":"The destroy() method is called only once at the end of the life cycle of a filter",
    "option_b":"The destroy() method is called after the filter has executed doFilter method",
    "option_c":"The destroy() method is called only once at the begining of the life cycle of a filter",
    "option_d":"The destroyer() method is called after the filter has executed",
    "correct":"The destroy() method is called only once at the end of the life cycle of a filter"
},
{
    "question":"How constructor can be used for a servlet?",
    "option_a":"Initialization",
    "option_b":"Constructor function",
    "option_c":"Initialization and Constructor function",
    "option_d":"Setup() method",
    "correct":"Initialization and Constructor function"
},
{
    "question":"Which of the following code retrieves the body of the request as binary data?",
    "option_a":"DataInputStream data = new InputStream()",
    "option_b":"DataInputStream data = response.getInputStream()",
    "option_c":"DataInputStream data = request.getInputStream()",
    "option_d":"DataInputStream data = request.fetchInputStream()",
    "correct":"DataInputStream data = request.getInputStream()"
}
]